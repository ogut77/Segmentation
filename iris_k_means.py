# -*- coding: utf-8 -*-
"""Iris-k-means.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BioAT4l0uaHqPcWTppMIcvUgn1MqNpZG
"""

from pandas import DataFrame, read_csv
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#load data
iris = pd.read_csv('https://datahub.io/machine-learning/iris/r/iris.csv')
iris.head()

#data descriptive statistics
iris.describe()

#class means
iris.groupby('class').mean()

#take all columns except last column as X
#take last column as y
X=iris.iloc[:,:-1]
y=iris.iloc[:,-1]
print(X.head())
print(y.head())

#run k-means where k=3
from sklearn.cluster import KMeans
# Initializing KMeans
kmeans = KMeans(n_clusters=3)
# Fitting with inputs
kmeans = kmeans.fit(X)
# Predicting the clusters
labels = kmeans.predict(X)
# Getting the cluster centers
C = kmeans.cluster_centers_

#class centers
C

iris['kclass']=labels

iris.head()

iris['kclass2'] = np.where( iris['kclass']==0, 'Iris-setosa', 0)
iris['kclass2'] = np.where( iris['kclass']==1, 'Iris-versicolor',iris['kclass2'])
iris['kclass2'] = np.where( iris['kclass']==2, 'Iris-virginica',iris['kclass2'])
iris.head()

from sklearn.metrics import confusion_matrix,accuracy_score
print(confusion_matrix(iris.kclass2,y))

